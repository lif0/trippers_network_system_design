openapi: 3.0.3
info:
  title: Swagger Trippers Network - OpenAPI 3.0
  description:
    A social network for travelers
  version: 1.0.0
externalDocs:
  description: Open sources on Github
  url: https://github.com/lif0/trippers_network_system_design
servers:
  - url: https://swagger.trippers-network.io/api/v1
tags:
  - name: users
    description: Operations about user
  - name: publications
    description: Everything about publications
  - name: media
    description: Everything about media
  - name: feeds
    description: Everything about feed
  - name: locations
    description: Everything about location
paths:
  /users/signin:
    post:
      tags:
        - users
      summary: "User login"
      description: "Logs in a user and returns a JWT token."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: "Successful operation"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: "Bad request"
        '401':
          description: "Username or password not correct"
        '404':
          description: "Username not found"
        '500':
          description: " Internal Server Error"
  /users/signup:
    post:
      tags:
        - users
      summary: "User registration"
      description: "Create a new user."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: "User successfully registered"
        '400':
          description: "Bad request"
        '404':
          description: "User name already exists"
        '500':
          description: " Internal Server Error"
  /users/{user_id}/follow:
    post:
      tags:
        - users
      summary: "Subscribe to the user"
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "Subscription successful"
        '400':
          description: "Bad request"
        '401':
          description: "Unauthorized"
        '404':
          description: "User not found"
        '500':
          description: " Internal Server Error"
  /users/{user_id}/unfollow:
    post:
      tags:
        - users
      summary: "Unubscribe to the user"
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: "Subscription successful"
        '400':
          description: "Bad request"
        '401':
          description: "Unauthorized"
        '404':
          description: "User not found"
        '500':
          description: " Internal Server Error"
  
  /publications:
    post:
      tags:
        - publications
      summary: "Create a publication"
      description: "Creates a new publication post."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicationRequest'
      responses:
        '200':
          description: "Publication created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicationResponse'
        '400':
          description: "Bad request"
        '401':
          description: "Unauthorized"
        '500':
          description: " Internal Server Error"
  /publications/{publication_id}/reactions:
    post:
      tags:
        - publications
      summary: "Reaction to the publication"
      description: "action is 1 = like, action is 0 = unlike"
      parameters:
        - name: publication_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicationReactionRequest'
      responses:
        '200':
          description: "Successful"
        '400':
          description: "Bad request"
        '401':
          description: "Unauthorized"
        '404':
          description: "Publication not found"
        '500':
          description: " Internal Server Error"
  /publications/{publication_id}/comments:
    post:
      tags:
        - publications
      summary: "Add comment to the publication"
      parameters:
        - name: publication_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PublicationCommentRequest'
      responses:
        '200':
          description: "Successful"
        '400':
          description: "Bad request"
        '401':
          description: "Unauthorized"
        '404':
          description: "Publication not found"
        '500':
          description: " Internal Server Error"
  
  /media/image/store:
    post:
      tags:
        - media
      summary: "Upload media"
      description: "Uploads a photo."
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: "Media is uploaded"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaUploadResponse'
        '400':
          description: "Bad request"
        '401':
          description: "Unauthorized"
        '404':
          description: "Publication not found"
        '500':
          description: " Internal Server Error"
  /media/image/{image_id}:
    get:
      tags:
        - media
      summary: "Get image url"
      parameters:
        - name: image_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: "Media is uploaded"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaImageGetResponse'
        '400':
          description: "Bad request"
        '401':
          description: "Unauthorized"
        '404':
          description: "Image not found"
        '500':
          description: " Internal Server Error"

  /feeds/timeline:
    get:
      tags:
        - feeds
      summary: "Get the user feed"
      description: "Retrieves the user's feed."
      parameters:
        - name: user_id
          required: false
          in: query
          schema:
            type: integer
        - name: location_id
          required: false
          in: query
          schema:
            type: integer          
        - name: page
          required: true
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: "Feed retrieved"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedUserResponse'
        '400':
          description: "Bad request"
        '401':
          description: "Unauthorized"
        '404':
          description: "User not found"
        '500':
          description: " Internal Server Error"

  /locations/places/{type}:
    get:
      tags:
        - locations
      summary: "Get most popular places"
      description: "Retrieves the most popular places."
      parameters:
        - name: type
          required: true
          in: path
          schema:
            type: string
          example: "popular"
        - name: page
          required: true
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: "Places retrieved"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LocationPopularPlaceResponse'
        '400':
          description: "Bad request"
        '401':
          description: "Unauthorized"
        '500':
          description: " Internal Server Error"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LoginRequest:
      required:
        - username
        - password
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    LoginResponse:
      type: object
      properties:
        jwtToken:
          type: string
    RegisterRequest:
      required:
        - username
        - password
        - email
        - citizenship
      type: object
      properties:
        username:
          type: string
        password:
          type: string
        email:
          type: string
        citizenship:
          type: array
          items:
            type: integer

    PublicationRequest:
      required:
        - image_id
        - description
        - location
      type: object
      properties:
        image_id:
          type: string
          format: uuid
        description:
          type: string
          maxLength: 200
        location:
          $ref: '#/components/schemas/PublicationLocationRequest'
    PublicationLocationRequest:
      required:
        - longitude
        - latitude
      type: object
      properties:
        longitude:
          type: number
          format: double
        latitude:
          type: number
          format: double
    PublicationResponse:
      type: object
      properties:
        publicationID:
          type: integer
        image_url:
          type: string
        description:
          type: string
        location:
          $ref: '#/components/schemas/LocationResponse'
    
    PublicationReactionRequest:
      required:
        - action
      type: object
      properties:
        action:
          type: integer
    
    PublicationCommentRequest:
      required:
        - text
      type: object
      properties:
        text:
          type: string
          maxLength: 140

    MediaUploadResponse:
      required:
        - imageID
      type: object
      properties:
        imageID:
          type: string
          format: uuid

    MediaImageGetResponse:
      required:
        - imageUrl
      type: object
      properties:
        imageUrl:
          type: string
          format: string
    
    
    FeedUserResponse:
      type: object
      properties:
        userID:
          type: integer
        publicationID:
          type: integer
        imageUrl:
          type: string
        location:
          $ref: '#/components/schemas/LocationResponse'
        pagination:
          $ref: '#/components/schemas/PaginationResponse'

    FeedLocationResponse:
      type: object
      properties:
        userID:
          type: integer
        publicationID:
          type: integer
        imageUrl:
          type: string
        location:
          $ref: '#/components/schemas/LocationResponse'
        pagination:
          $ref: '#/components/schemas/PaginationResponse'
    
    LocationResponse:
      type: object
      properties:
        locationID:
          type: integer
        locationName:
          type: string
        longitude:
          type: number
          format: double
        latitude:
          type: number
          format: double

    LocationPopularPlaceResponse:
      type: object
      properties:
        order:
          type: integer
        locationID:
          type: integer
        locationName:
          type: string
        publicationsTotal:
          type: integer

    PaginationResponse:
      type: object
      properties:
        page:
          type: integer

security:
  - bearerAuth: []